testing: true

# Not all hardware is used all the time
test_mode: {
    color_sensor: true,
    ultrasonics: true,
    dmcc: true,
    ir:{ front: false, back: true, right: true, left: false}
}

ADC: {
    ONE: 0x48,
    TWO: 0x49,
    THREE: 0x4A,
    FOUR: 0x4B
}

dmcc_drive_motors: {
    front_left: { board_num: 0, motor_num: 1 },
    front_right: { board_num: 0, motor_num: 2, invert: True },
    back_left: { board_num: 2, motor_num: 1 },
    back_right: { board_num: 2, motor_num: 2, invert: True }
}

turret: {
    servos: {
        yaw:   { PWM: 2, min: 20, max: 160 }, # Pan : P9_42 (pwm2/ecap0)
        pitch: { PWM: 4, min: 20, max: 180 }  # Tilt: P9_16 (pwm4)
    }
}

gun: {
    max_trigger_duration: 0.25,  # Maximum duration a trigger pin can be high
    laser_gpio: 8,  # Gun laser: P8_35 (gpio8)
    trigger_gpios: {
        retract: 74,  # Gun trigger - retract: P8_41 (gpio74)
        advance: 72   # Gun trigger - advance: P8_43 (gpio72)
    },
    dmcc_wheel_motors: {
        right: { board_num: 1, motor_num: 1 },
        left: { board_num: 1, motor_num: 2, invert: True },
    }
}

# location [x, y] is in meters, assumes 30cm x 30cm bot with right = +X axis, top = +Y axis
# offset is the PRU data memory offset containing the sensor result
ultrasonics: {
    pru_num: 0,
    pru_file: "bot/pru/ultrasonic.bin",
    sensors: {
        front: { offset: 0, xy: [  0.0,  0.15], dir: [ 0.0,  1.0] },
        back:  { offset: 8, xy: [  0.0, -0.15], dir: [ 0.0, -1.0] },
        left:  { offset: 16, xy: [-0.15,     0], dir: [-1.0,  0.0] },
        right: { offset: 24, xy: [ 0.15,   0.0], dir: [ 1.0,  0.0] }
    }
}

course: {
    ncsu: &ncsu {
        x_size: 1.1786,  # in meters, ncsu course: 46.4"
        y_size: 2.4257  # in meters, official spec: 95.5"
    },
    official: &official {
        x_size: 1.2065,  # in meters, official spec: 47.5"
        y_size: 2.4257  # in meters, official spec: 95.5"
    },
    default: *ncsu,
    # bonding box of valid firing locations (for gunner)
    firing_box: { 
        y_min: 0.889,  # 35"
        y_max: 1.55,  # 60"
        x_min: 0.3,  # ~12"
        x_max: 1.07   # 42"
    }
}

ir_select_gpios: [44, 26, 46, 65]  # GPIOs to select IR sensor units: [P8_12 (gpio44), P8_14 (gpio26), P8_16 (gpio46), P8_18 (gpio65)]
ir_analog_input_gpios: {front: 39, back: 35, left: 67, right: 68}  # GPIO pins to read selected IR sensor units: P8_04 (gpio39), P8_06 (gpio35), P8_08 (gpio67), P8_10 (gpio68)
ir_analog_adc_config: {  # ADC configuration
    i2c_bus: 1,  # System I2C bus to use to talk to ADCs
    i2c_addr: {left: 0x50, right: 0x59, back: 0x51, front: 0x5a},  # I2C (7-bit) addresses for ADCs: 0x50, 0x51, 0x59, 0x5a
    i2c_registers: {  # Register addresses, num bytes and initial values to set (if any)
        alert_status     : { addr: 0x01, bytes: 1},
        configuration    : { addr: 0x02, bytes: 1, init: 0x2d },    # 0x2d: Fastest cycle time, no alert hold, alert flag & pin enabled, active high
        v_low            : { addr: 0x03, bytes: 2, init: 0x0000 },  # Low threshold
        v_high           : { addr: 0x04, bytes: 2, init: 0x0750 },  # High threshold
        v_hyst           : { addr: 0x05, bytes: 2, init: 0x0080 },  # Difference to clear alert bit
        v_min            : { addr: 0x06, bytes: 2 },  # Min conversion result; default: 0x0fff (as per doc, but shouldn't it be 0xff0?)
        v_max            : { addr: 0x07, bytes: 2 }   # Max conversion result; default: 0x0000
    },
    result_addr: 0x00,  # Register address where conversion result is stored (2 bytes)
    result_mask: 0x0ff0,  # Mask to apply to conversion result
    result_shift: 4,  # No. of bits to shift to the right after applying mask
}
ir_read_adc: true  # read accurate ADC values instead of binary GPIO values
ir_verbose_output: false  # print verbose output to console (log level: INFO), for debugging & testing only
logging: {log_file: bot/logs/bot.log, file_handler_level: DEBUG, stream_handler_level: INFO}  # Logging options
strategy: bot/planner/strategies/strategy0.yaml
targeting: bot/gunner/targeting/targeting0.yaml
test_pwm_base_dir: bot/simulator/pins/pwm/pwm
test_gpio_base_dir: bot/simulator/pins/gpio/gpio
test_adc_base_dir: bot/simulator/pins/adc
server_protocol: tcp
server_bind_host: "*"  # Special hostname servers bind to, for listening on all interfaces
server_host: 127.0.0.1  # Default hostname clients connect to
ctrl_server_port: 60000  # Port used to send control messages to the bot
pub_server_port: 60001  # PubServer publishes bot data on this port
irs_per_array: 16
color_sensor: {LED_PWM: 5}
ir_thresh: 60
